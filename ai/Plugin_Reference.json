{
	"page0": {
		"title": "Vnano System Plug-in Group",
		"description": "Plug-ins in this package/subpackages provide basic features available in scripts of the Vnano (VCSSL nano), e.g.: I/O features, utility features, and so on.",
		"text": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n\t<title>Vnano System Plug-ins<\/title>\n\t<meta charset=\"UTF-8\">\n\t<style type=\"text\/css\">\n\t\th1 .spec-path { font-size: 70%; }\n\t\th2 .spec-path { font-size: 70%; }\n\t\t.spec-table { width: 100%; border: 1px solid #000000; border-collapse: collapse; margin-bottom: 20px; }\n\t\t.spec-table td { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table th { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table .lcol { width: 100px; background-color: #eeeeee; }\n\t\t.spec-table .rcol { }\n\t\t.spec-dl { }\n\t\t.spec-dl dt { font-weight: bold; display: list-item; list-style-position: outside; margin-left: 20px; list-style-type: disc; }\n\t\t.spec-dl dd { margin-bottom: 14px; line-height: 160%; }\n\t<\/style>\n<\/head>\n\n<body>\n\n\n\n<h1>Vnano System Plug-in Group<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system package)<\/span><\/h1>\n<hr \/>\n\n\n\n<h2>Abstract<\/h2>\n\n<p>\nPlug-ins in this package\/subpackages provide basic features available in scripts of the Vnano (VCSSL nano), e.g.: I\/O features, utility features, and so on.\n<br \/>\nFeatures provided by these plug-ins is a subset of the  <a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/System\">VCSSL System Library<\/a> which is a standard library of the VCSSL,\nso same features are also available in scripts of the VCSSL by default.\n<\/p>\n\n\n\n<h2>List of Provided Plug-ins and Features<\/h2>\n\n<dl class=\"spec-dl\">\n\t<dt><a href=\"#SystemEnvironmentXnci1Plugin\">SystemEnvironmentXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides environment-related variables.\n\t\t\t<br \/>\n\t\t\tVariables: <a href=\"#EOL\">EOL<\/a> \/ <a href=\"#LF\">LF<\/a> \/ <a href=\"#CR\">CR<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemEnvironmentXnci1Plugin\">SystemDataTypeXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides data-type-utility functions\/variables.\n\t\t\t<br \/>\n\t\t\tVariables: <a href=\"#INT_MAX\">INT_MAX<\/a> \/ <a href=\"#INT_MIN\">INT_MIN<\/a> \/ <a href=\"#FLOAT_MAX\">FLOAT_MAX<\/a> \/ <a href=\"#FLOAT_MIN_ABS_NORMAL\">FLOAT_MIN_ABS_NORMAL<\/a> \/ <a href=\"#FLOAT_MIN_ABS_DENORMAL\">FLOAT_MIN_ABS_DENORMAL<\/a> \/ <a href=\"#NAN\">NAN<\/a> \/ <a href=\"#INF\">INF<\/a>\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#nan\">nan(value)<\/a> \/ <a href=\"#inf\">inf(value)<\/a> \/ <a href=\"#length\">length(array, dimIndex)<\/a> \/ <a href=\"#arrayrank\">arrayrank(array)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTerminalIOXnci1Plugin\">SystemTerminalIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides I\/O functions from\/to the terminal.\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#print\">print(...)<\/a> \/ <a href=\"#println\">println(...)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemUserIOXnci1Plugin\">SystemUserIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides interactive I\/O functions from\/to the user.\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#popup\">popup(message)<\/a> \/ <a href=\"#alert\">alert(message)<\/a> \/ <a href=\"#confirm\">confirm(message)<\/a> \/ <a href=\"#input\">input(message)<\/a> \/ <a href=\"#input-string-any\">input(message, defaultValue)<\/a>\n\t<dt><a href=\"#SystemFileIOXnci1Plugin\">SystemFileIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides I\/O functions from\/to files.\n\t\t\t<br \/>\n\t\t\tVariables: <a href=\"#READ\">READ<\/a> \/ <a href=\"#WRITE\">WRITE<\/a> \/ <a href=\"#APPEND\">APPEND<\/a> \/ <a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#WRITE_CSV\">WRITE_CSV<\/a> \/ <a href=\"#APPEND_CSV\">APPEND_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#WRITE_TSV\">WRITE_TSV<\/a> \/ <a href=\"#APPEND_TSV\">APPEND_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a>\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#open\">open(fileName, mode)<\/a> \/ <a href=\"#open3arg\">open(fileName, mode, encoding)<\/a> \/ <a href=\"#close\">close(fileId)<\/a> \/ <a href=\"#flush\">flush(fileId)<\/a> \/ \n\t\t\t<a href=\"#write\">write(fileId, ...)<\/a> \/ <a href=\"#writeln\">writeln(fileId, ...)<\/a> \/ <a href=\"#read\">read(fileId)<\/a> \/ <a href=\"#readln\">readln(fileId)<\/a> \/ <a href=\"#countln\">countln(fileId)<\/a> \/ \n\t\t\t<a href=\"#save\">save(filePath, value)<\/a> \/ <a href=\"#load\">load(filePath)<\/a> \/ \n\t\t\t<a href=\"#exists\">exists(filePath)<\/a> \/ <a href=\"#isdir\">isdir(directoryPath)<\/a> \/ <a href=\"#listdir\">listdir(directoryPath)<\/a> \/ <a href=\"#mkdir\">mkdir(directoryPath)<\/a> \/ \n\t\t<\/dd>\n\t<dt><a href=\"#SystemTimeXnci1Plugin\">SystemTimeXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides time-utility functions.\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#time\">time()<\/a> \/ <a href=\"#sleep\">sleep(sleepTime)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTerminationXnci1Plugin\">SystemTerminationXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides functions for terminating scripts.\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#exit\">exit()<\/a> \/ <a href=\"#exit_int\">exit(exitStatusCode)<\/a> \/ <a href=\"#error\">error(errorMessage)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTestXnci1Plugin\">SystemTestXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides utility functions for testing.\n\t\t\t<br \/>\n\t\t\tFunctions: <a href=\"#assert\">assert(expectedCondition)<\/a>\n\t\t<\/dd>\n<\/dl>\n\n\n\n<h2>License<\/h2>\n\n<p>\nAll of the above plug-ins are released under <a href=\"https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/deed\">CC0<\/a>.\n<\/p>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemEnvironmentXnci1Plugin\">SystemEnvironmentXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemEnvironmentXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing environment-related variables.\n<\/p>\n\n\n<h3>Variables<\/h3>\n\n\n<table id=\"EOL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">EOL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the end-of-line code depending on environment.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"LF\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">LF<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing a kind of end-of-line code &quot;LF&quot;.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"CR\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">CR<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing a kind of end-of-line code &quot;CR&quot;.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemDataTypeXnci1Plugin\">SystemDataTypeXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemDataTypeXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing data-type-utility functions\/variables.\n<\/p>\n\n\n<h3>Variables<\/h3>\n\n<table id=\"INT_MAX\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">INT_MAX<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the maximum (positive) value in all representable values of &quot;int&quot; type.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">int (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"INT_MIN\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">INT_MIN<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the minimum (negative) value in all representable values of &quot;int&quot; type.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">int (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MAX\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">FLOAT_MAX<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the maximum (positive) value in all representable values of &quot;float&quot; type.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MIN_ABS_NORMAL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">FLOAT_MIN_ABS_NORMAL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the minimum absolute (positive, non-zero) value in all representable normal numbers of &quot;float&quot; type.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MIN_ABS_DENORMAL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">FLOAT_MIN_ABS_DENORMAL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the minimum absolute (positive, non-zero) value in all representable numbers of &quot;float&quot; type containing denormal numbers.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"NAN\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">NAN<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the value of &quot;NaN&quot;. The &quot;NaN&quot; represents the special value as a result of invalid floating-point operations. Also, the NaN does not equal any values containing the NaN itself, so we can not check whether a value is NaN or not by comparing this value by &quot;==&quot; operation. For checking a value is nan or not, use <a href=\"#nan\">nan(value)<\/a> function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"INF\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">INF<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the value of the (positive) infinity of &quot;float&quot; type.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"nan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">nan(value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Checks whether the passed value is the NaN or not. Not that the NaN does not equal any values containing the NaN itself, so we can not check whether a value is NaN or not by comparing this value by &quot;==&quot; operation. Therefore, use this function for checking it.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Singature<\/td>\n\t\t<td class=\"rcol\">bool nan(float value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type) value: The value to be checked.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(bool type) &quot;true&quot; if the passed value is the NaN, &quot;false&quot; if it isn't.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( nan(0.0\/0.0) ); \/\/ true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"inf\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">inf(value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Checks whether the passed value is the (positive or negative) infinity.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Singature<\/td>\n\t\t<td class=\"rcol\">bool inf(float value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type) value: The value to be checked.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(bool type) &quot;true&quot; if the passed value is the (positive or negative) infinity, &quot;false&quot; if it isn't.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( inf(1.0\/0.0) ); \/\/ true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"length\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">length(array, dimIndex)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Gets the length of the specified dimention as &quot;dimIndex&quot; of the specified array &quot;array&quot;.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int length(any array[]...[], int dimIndex)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(any type, any arrayrank) array: The array you want to get the length of it.\n\t\t\t<br \/>\n\t\t\t(int type) dimIndex: The index of the array-dimension you want to get the length on it (regarding the most left dimension as 0-th).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(int type) The length on the specified dimension of the specified array.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int a[10][11][12];<br \/>println( length(a,0) ); \/\/ 10<br \/>println( length(a,1) ); \/\/ 11<br \/>println( length(a,2) ); \/\/ 12<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"arrayrank\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">arrayrank(array)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Gets the number of dimensions (array rank) of the specified array.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int arrayrank(any array[]...[])<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(any type, any rank) array: The array you want to get the number of dimensions of it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(int type) The number of dimensions of the specified array.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int a[10][11][12];<br \/>print( arrayrank(a) ); \/\/ 3<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTerminalIOXnci1Plugin\">SystemTerminalIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTerminalIOXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing I\/O functions from\/to the terminal.\n<br \/>\nWhen the option \"UI_MODE\" of the script engine is set to \"CUI\",\nI\/O will be performed from\/to the standard input\/output.\nWhen the option \"UI_MODE\" of the script engine is set to \"GUI\",\na window like a terminal will be launched, \nand I\/O will be performed from\/to it.\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"print\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">print(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Outputs values to the terminal with delimiting by spaces (tabs).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void print(...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(any data-types, any ranks, any numbers) Values to be printed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( &quot;Hello&quot;, 123, 4.56, true ); \/\/ Hello 123, 4.56, true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"println\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">println(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Outputs values to the terminal with delimiting by spaces (tabs), and go to the new line on the terminal.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void println(...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(any data-types, any ranks, any numbers) Values to be printed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">println( &quot;Hello&quot;, 123, 4.56, true ); \/\/ Hello 123, 4.56, true (line feed)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemUserIOXnci1Plugin\">SystemUserIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemUserIOXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing interactive I\/O functions from\/to the user.\n<br \/>\nWhen the option \"UI_MODE\" of the script engine is set to \"CUI\",\nI\/O will be performed from\/to the standard input\/output.\nWhen the option \"UI_MODE\" of the script engine is set to \"GUI\", \na pop-up window will be displayed, \nand I\/O will be performed interactively by user's actions on the window.\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"popup\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">popup(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Displays a message or a value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void popup(any message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(any type) message: The message or the value to be displayed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">popup( &quot;Hello&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"alert\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">alert(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Displays a message. Compared with \"popup\" function, the window title, behaviour, and so on are tuned for displaying warning messages.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void alert(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(string type) message: The message to be displayed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">alert( &quot;Oops&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"confirm\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">confirm(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Displays a confirmation message, and asks for the answer in the form of: Yes (y) or No (n).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">bool confirm(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(string type) message: The message to be displayed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(bool type) Returns true if the user has answered \"Yes\" (or inputted \"y\" on the CUI mode).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">bool isYes = confirm( &quot;OK?&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"input\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">input(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Displays a message, and asks for input.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string[] input(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(string type) message: The message to be displayed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(string[] type) The inputted value. (The array-length is normally 1, so you can receive it by a scalar variable, if you want.)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">string inputtedValue[] = input( &quot;Please input&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"input-string-any\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">input(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Displays a message, and asks for input. A default value can be specified by the second argument.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string[] input(string message, any defaultValue)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) message: The message to be displayed.\n\t\t\t<br \/>\n\t\t\t(any type) defaultValue: The default value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(string[] type) The inputted value. (The array-length is normally 1, so you can receive it by a scalar variable, if you want.)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">string inputtedValue[] = input( &quot;Please input&quot;, &quot;defaultValue&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemFileIOXnci1Plugin\">SystemFileIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemFileIOXnci1Plugin)<\/span><\/h2>\n\n<p>\nProvides I\/O functions from\/to files.\n<\/p>\n\n\n<h3>Variables<\/h3>\n\n\n<table id=\"READ\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">READ<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">The value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for reading contents from a texit file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">WRITE<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">The value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for writing contents to a texit file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">APPEND<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">The value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for appending contents a texit file, without deleting the current contents.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">READ_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for reading contents from a \"numerical CSV\" file.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical CSV\" means the format that multiple numerical values are described in each line, delimited by commas: \",\".\n\t\t\tNote that, it assumes that values don't contain commas or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode reads the values, by splitting each line by commas simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">WRITE_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for writing contents to a \"numerical CSV\" file.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical CSV\" means the format that multiple numerical values are described in each line, delimited by commas: \",\".\n\t\t\tNote that, it assumes that values don't contain commas or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode writes the values in a line, by inserting commas between them simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">APPEND_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for appending contents to a \"numerical CSV\" file, without deleting the current contents.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical CSV\" means the format that multiple numerical values are described in each line, delimited by commas: \",\".\n\t\t\tNote that, it assumes that values don't contain commas or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode writes the values in a line, by inserting commas between them simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">READ_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for reading contents from a \"numerical TSV\" file.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical TSV\" means the format that multiple numerical values are described in each line, delimited by tab characters (tabs).\n\t\t\tNote that, it assumes that values don't contain tabs or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode reads the values, by splitting each line by tabs simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">WRITE_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for writing contents to a \"numerical TSV\" file.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical TSV\" means the format that multiple numerical values are described in each line, delimited by tab characters (tabs).\n\t\t\tNote that, it assumes that values don't contain tabs or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode writes the values in a line, by inserting tabs between them simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">APPEND_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for appending contents to a \"numerical TSV\" file, without deleting the current contents.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"numerical TSV\" means the format that multiple numerical values are described in each line, delimited by tab characters (tabs).\n\t\t\tNote that, it assumes that values don't contain tabs or other special characters, and they are not enclosed by double-quatations. \n\t\t\tHence, even if they are contained in values, no special handling will be performed to them.\n\t\t\tThis mode writes the values in a line, by inserting tabs between them simply.\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_STSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">READ_STSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tThe value of \"mode\" parameter of <a href=\"#open\">open<\/a> function, for reading contents from a numerical \"Spaces &amp; Tabs Separated Values\" file.\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tIn the above, \"Spaces &amp; Tabs Separated Values\" means the format that multiple numerical values are described in each line, delimited by space or tab characters.\n\t\t\tEspecially, as a delimiter, sometimes multiple consecutive spaces\/tabs are used instead of one space\/tab, for aligning positions of columns.\n\t\t\tNote that, the format name \"Spaces &amp; Tabs Separated Values\" (STSV) is not general. It is the name used only in this document and related docs.\n\t\t\tHowever, even though it is not clear what we should call it as, this format is often used in fields in numerical calculations and data analysis.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">string (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"open\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">open(fileName, mode)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tOpens the specified file in the specified mode, and returns the file ID assigned to it. \n\t\t\tThe character encoding will be set to UTF-8 by default. If \"FILE_IO_ENCODING\" option exists, the encoding will be set to its value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int open(string fileName, string mode)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) fileName: The name of the path of the file to be opened.\n\t\t\t<br \/>\n\t\t\t(string type) mode: The mode representing what kind of I\/O will be performed to the file: select from <a href=\"#READ\">READ<\/a>, <a href=\"#WRITE\">WRITE<\/a>, and so on.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) The ID assigned to the opened file, necessary to specify when reading\/writing contents from\/to the opened file. \n\t\t\t<br \/>\n\t\t\tNote that, this file ID is different from the file ID assigned by OS. \n\t\t\tThis file ID will be assigned in ascending order from 1, for the files opened in a script. (The same file ID may be reused after the file was closed.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int fileId = open(\"example.txt\", READ);<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"open3arg\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">open(fileName, mode, encoding)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Opens the specified file in the specified mode and the encoding, and returns the file ID assigned to it.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int open(string fileName, string mode, string encoding)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) fileName: The name of the path of the file to be opened.\n\t\t\t<br \/>\n\t\t\t(string type) mode: The mode representing what kind of I\/O will be performed to the file: select from <a href=\"#READ\">READ<\/a>, <a href=\"#WRITE\">WRITE<\/a>, and so on.\n\t\t\t<br \/>\n\t\t\t(string type) encoding: The encoding for reading\/writing contents from\/to the file (e.g.: \"UTF-8\", \"Shift_JIS\", and so on).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) The ID assigned to the opened file, necessary to specify when reading\/writing contents from\/to the opened file. \n\t\t\t<br \/>\n\t\t\tNote that, this file ID is different from the file ID assigned by OS. \n\t\t\tThis file ID will be assigned in ascending order from 1, for the files opened in a script. (The same file ID may be reused after the file was closed.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int fileId = open(\"example.txt\", READ, \"Shift_JIS\");<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"close\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">close(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Closes the specified file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void close(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file to be closed. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tclose(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"flush\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">flush(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tWrites (flushes) the temporary stored contents in the writing-buffer, to the file.\n\t\t\tIn most situation, it is not necessary to flush the buffer explicitly by this function, because the buffer will be flushed automatically when the file will be closed.\n\t\t\tThis function is useful when, for example, your script keeps a file opened for a while, and you want to flush the buffer at the arbitrary timing.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void flush(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file to be flushed. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tflush(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"write\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">write(fileId, ...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Writes the specified value(s) to the specified file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void write(int fileId, ...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file to which write values. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t\t<br \/>\n\t\t\t(any number\/type, after the above param) The value(s) to be written.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\twrite(fileId, \"abc\", 123, 4.56, true);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"writeln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">writeln(fileId, ...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Writes the specified value(s) to the specified file, and goes to the next line.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void write(int fileId, ...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file to which you write values. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t\t<br \/>\n\t\t\t(any number\/type, after the above param) The value(s) to be written.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\twriteln(fileId, \"abc\", 123, 4.56, true);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"read\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">read(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Reads all value(s) from the specified file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string[] read(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file from which you read values. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string[] type) In <a href=\"#READ\">READ<\/a> mode, the array of which length is 1, storing all content of the file, will be returned (In this case, you can store it to a scalar variable, by \"=\" operator simply).\n\t\t\tIn <a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a> modes, an array storing the whole content(s) of the file splitted by the delimiter will be returned.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring contentInFile = read(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"readln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">readln(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Reads one line from the specified file.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string[] readln(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file from which you read values. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string[] type) In <a href=\"#READ\">READ<\/a> mode, the array of which length is 1, storing the content of one line of the file, will be returned (In this case, you can store it to a scalar variable, by \"=\" operator simply).\n\t\t\tIn <a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a> modes, an array storing the content(s) of one line splitted by the delimiter will be returned.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring contentInLine = readln(fileId);\n\t\t\t<br \/>\n\t\t\t<br \/>\n\t\t\t&nbsp;( or )\n\t\t\t<br \/>\n\t\t\t<br \/>\n\t\t\tint fileId = open(\"example.txt\", READ_CSV);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring valuesInLine[] = readln(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"countln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">countln(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tCounts up the total number of lines in the specified file.\n\t\t\tPlease note that, this function internally reads all lines from the file, and reopens the file in the same mode.\n\t\t\tHence, if you use this function for the file from which some lines were already read, you will get incorrect result, and the reading state (e.g.: pointer to the line to be read next time) for the file will be reset.\n\t\t\tTo prevent the above, use this function only just after opening the file.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int countln(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) fileId: The file ID of the file of which lines should be counted up. (The file ID is the returned value of <a href=\"#open\">open<\/a> function.)\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int type) The total number of lines in the specified file.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\tint lineN = countln(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"save\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">save(filePath, value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tOpens the specified file, and writes the specified value, and closes the file.\n\t\t\tThe character encoding will be set to UTF-8 by default. If \"FILE_IO_ENCODING\" option exists, the encoding will be set to its value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void save(string filePath, any value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) filePath: The name or path of the file to which you write the value.\n\t\t\t<br \/>\n\t\t\t(any type) value: The value to be written.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tsave(\"example.txt\", 123);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"load\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">load(filePath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tOpens the specified file, and reads the whole content, and closes the file.\n\t\t\tThe character encoding for the reading will be set to UTF-8 by default. If \"FILE_IO_ENCODING\" option exists, the encoding will be set to its value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string load(string filePath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) filePath: The name or path from which you read the content.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) The content read from the file.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tstring content = read(\"example.txt\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exists\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">exists(filePath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tChecks whether a file or a directory exists at the specified file path.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">bool exists(string filePath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) filePath: The file path to be checked.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(bool type) Returns true if a file or a directory exists at the specified file path.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tbool result = exists(\".\/temp\/example.txt\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"isdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">isdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tChecks whether the element (file or directory) located at the specified path is a directory.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">bool isdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) directoryPath: The directory path to be checked.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(bool type) Returns true if the element at the specified path is a directory.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tbool result = isdir(\".\/temp\/example_folder\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"listdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">listdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tGets the names of all elements (files and subdirectories) in the specified directory.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">string[] listdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) directoryPath: The path of the directory of which names of elements should be gotten.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string[] type) The array storing names of the all elements in the specified directory.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tstring elementNames[] = listdir(\".\/temp\/example_folder\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"mkdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">mkdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tCreates the specified directory.\n\t\t\tPlease note that, this function does not create the parent directory automatically, so the parent directory must already exist.\n\t\t\tIf the parent directory does not exist, please create it at first, and then create the (sub)directory.\n\t\t\tAlso, if the specified directory already exist, this function do nothing (does not raise an error).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void mkdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string type) directoryPath: The path of the directory to be created.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tmkdir(\".\/temp\");\n\t\t\t<br \/>\n\t\t\tmkdir(\".\/temp\/example_folder\");\n\t\t\t<br \/>\n\t\t\tmkdir(\".\/temp\/example_folder\/example_folder2\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTimeXnci1Plugin\">SystemTimeXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTimeXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing time-utility functions\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"time\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">time()<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Measures the elapsed time from the beginning of the execution of the current script, in the unit of millisecond.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">int time()<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(int type) The elapsed time from the beginning of the execution of the current script, in the unit of millisecond.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int t = time();<br \/>print( t );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sleep\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sleep(sleepTime)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Stops the execution of the script, during the specified time in the unit of millisecond.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Singature<\/td>\n\t\t<td class=\"rcol\">void sleep( int sleepTime )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(int type) sleepTime: The time in the unit of millisecond, for which the script to be stopped.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">sleep(1000); \/\/ Stops 1 second<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTerminationXnci1Plugin\">SystemTerminationXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTerminationXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing functions for terminating scripts\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"exit\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">exit()<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Terminates the execution of the script without generating errors.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void exit()<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Parameters<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">exit();<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exit_int\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">exit(exitStatusCode)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Terminates the execution of the script without generating errors, with specifying the exit status code.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void exit(int exitStatusCode)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(int type) exitStatusCode: The exit status code (it is depends on implementations of the script engine and the host application that how it will be handled)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">exit(1);<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"error\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">error(errorMessage)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Terminates the execution of the script with generating an error having the specified message.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void error(string errorMessage)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Parameters<\/td>\n\t\t<td class=\"rcol\">(string type) errorMessage: The content of the error message to be notified to the user of the script.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">error( &quot;something is wrong !&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTestXnci1Plugin\">SystemTestXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTestXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe XNCI1 plug-in providing utility functions for testing.\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"assert\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">assert(expectedCondition)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">Do nothing if the value of the expected condition specified as an argument is &quot;true&quot;, and generates an error if it is &quot;false&quot;.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">void assert( bool expectedCondition )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(bool type) expectedCondition: The value of the expected condition.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">None<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">int x;<br \/>x = 1; assert( 0 < x ); \/\/ OK<br \/>x = -1; assert( 0 < x ) ; \/\/ Error<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n\n\n\n\n\n\n\n<\/body>\n<\/html>\n"
	},
	"page1": {
		"title": "Vnano System プラグイン群",
		"description": "このパッケージ/サブパッケージ内のプラグイン群は、Vnano (VCSSL nano) のスクリプトから利用できる、基本的な入出力機能やユーティリティ機能などを提供します。",
		"text": "<!doctype html>\n<html lang=\"ja\">\n\n<head>\n\t<title>Vnano System プラグイン群<\/title>\n\t<meta charset=\"UTF-8\">\n\t<style type=\"text\/css\">\n\t\th1 .spec-path { font-size: 70%; }\n\t\th2 .spec-path { font-size: 70%; }\n\t\t.spec-table { width: 100%; border: 1px solid #000000; border-collapse: collapse; margin-bottom: 20px; }\n\t\t.spec-table td { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table th { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table .lcol { width: 100px; background-color: #eeeeee; }\n\t\t.spec-table .rcol { }\n\t\t.spec-dl { }\n\t\t.spec-dl dt { font-weight: bold; display: list-item; list-style-position: outside; margin-left: 20px; list-style-type: disc; }\n\t\t.spec-dl dd { margin-bottom: 14px; line-height: 160%; }\n\t<\/style>\n<\/head>\n\n<body>\n\n\n\n<h1>Vnano System プラグイン群<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system パッケージ)<\/span><\/h1>\n<hr \/>\n\n\n\n<h2>概要<\/h2>\n\n<p>\nこのパッケージ\/サブパッケージ内のプラグイン群は、Vnano (VCSSL nano) のスクリプトから利用できる、基本的な入出力機能やユーティリティ機能などを提供します。\n<br \/>\nなお、このプラグイン群の提供機能は、VCSSL の標準ライブラリの一つである <a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/System\">VCSSL System ライブラリ<\/a> の機能のサブセットになっています。\nそのため、VCSSL のスクリプトにおいても同様の機能が標準で利用可能です。\n<\/p>\n\n\n<h2>提供プラグインおよび機能一覧<\/h2>\n\n<dl class=\"spec-dl\">\n\t<dt><a href=\"#SystemEnvironmentXnci1Plugin\">SystemEnvironmentXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\t環境に関する情報などを提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t変数: <a href=\"#EOL\">EOL<\/a> \/ <a href=\"#LF\">LF<\/a> \/ <a href=\"#CR\">CR<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemEnvironmentXnci1Plugin\">SystemDataTypeXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tデータ型関連のユーティリティ機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t変数: <a href=\"#INT_MAX\">INT_MAX<\/a> \/ <a href=\"#INT_MIN\">INT_MIN<\/a> \/ <a href=\"#FLOAT_MAX\">FLOAT_MAX<\/a> \/ <a href=\"#FLOAT_MIN_ABS_NORMAL\">FLOAT_MIN_ABS_NORMAL<\/a> \/ <a href=\"#FLOAT_MIN_ABS_DENORMAL\">FLOAT_MIN_ABS_DENORMAL<\/a> \/ <a href=\"#NAN\">NAN<\/a> \/ <a href=\"#INF\">INF<\/a>\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#nan\">nan(value)<\/a> \/ <a href=\"#inf\">inf(value)<\/a> \/ <a href=\"#length\">length(array, dimIndex)<\/a> \/ <a href=\"#arrayrank\">arrayrank(array)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTerminalIOXnci1Plugin\">SystemTerminalIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\t端末との入出力機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#print\">print(...)<\/a> \/ <a href=\"#println\">println(...)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemUserIOXnci1Plugin\">SystemUserIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tユーザーとの間の対話的な入出力機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#popup\">popup(message)<\/a> \/ <a href=\"#alert\">alert(message)<\/a> \/ <a href=\"#confirm\">confirm(message)<\/a> \/ <a href=\"#input\">input(message)<\/a> \/ <a href=\"#input-string-any\">input(message, defaultValue)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemFileIOXnci1Plugin\">SystemFileIOXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tファイル入出力機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t変数: <a href=\"#READ\">READ<\/a> \/ <a href=\"#WRITE\">WRITE<\/a> \/ <a href=\"#APPEND\">APPEND<\/a> \/ <a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#WRITE_CSV\">WRITE_CSV<\/a> \/ <a href=\"#APPEND_CSV\">APPEND_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#WRITE_TSV\">WRITE_TSV<\/a> \/ <a href=\"#APPEND_TSV\">APPEND_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a>\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#open\">open(fileName, mode)<\/a> \/ <a href=\"#open3arg\">open(fileName, mode, encoding)<\/a> \/ <a href=\"#close\">close(fileId)<\/a> \/ <a href=\"#flush\">flush(fileId)<\/a> \/ \n\t\t\t<a href=\"#write\">write(fileId, ...)<\/a> \/ <a href=\"#writeln\">writeln(fileId, ...)<\/a> \/ <a href=\"#read\">read(fileId)<\/a> \/ <a href=\"#readln\">readln(fileId)<\/a> \/ <a href=\"#countln\">countln(fileId)<\/a> \/ \n\t\t\t<a href=\"#save\">save(filePath, value)<\/a> \/ <a href=\"#load\">load(filePath)<\/a> \/ \n\t\t\t<a href=\"#exists\">exists(filePath)<\/a> \/ <a href=\"#isdir\">isdir(directoryPath)<\/a> \/ <a href=\"#listdir\">listdir(directoryPath)<\/a> \/ <a href=\"#mkdir\">mkdir(directoryPath)<\/a> \/ \n\t\t<\/dd>\n\t<dt><a href=\"#SystemTimeXnci1Plugin\">SystemTimeXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\t時間制御に関するユーティリティ機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#time\">time()<\/a> \/ <a href=\"#sleep\">sleep(sleepTime)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTerminationXnci1Plugin\">SystemTerminationXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tスクリプトを終了させる機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#exit\">exit()<\/a> \/ <a href=\"#exit_int\">exit(exitStatusCode)<\/a> \/ <a href=\"#error\">error(errorMessage)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#SystemTestXnci1Plugin\">SystemTestXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tテストのためのユーティリティ機能を提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数: <a href=\"#assert\">assert(expectedCondition)<\/a>\n\t\t<\/dd>\n<\/dl>\n\n\n\n<h2>ライセンス<\/h2>\n\n<p>\n上記のプラグインは全て <a href=\"https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/deed.ja\">CC0<\/a> で公開されています。\n<\/p>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemEnvironmentXnci1Plugin\">SystemEnvironmentXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemEnvironmentXnci1Plugin)<\/span><\/h2>\n\n<p>\n環境に関する情報などを提供するプラグインです。\n<\/p>\n\n\n<h3>変数<\/h3>\n\n\n<table id=\"EOL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">EOL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">環境におけるデフォルトの改行コードを格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"LF\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">LF<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">改行コードの一種である LF の値を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"CR\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">CR<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">改行コードの一種である CR の値を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemDataTypeXnci1Plugin\">SystemDataTypeXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemDataTypeXnci1Plugin)<\/span><\/h2>\n\n<p>\nデータ型関連のユーティリティ機能を提供するプラグインです。\n<\/p>\n\n\n<h3>変数<\/h3>\n\n<table id=\"INT_MAX\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">INT_MAX<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">int 型の最大値（正の値）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">int (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"INT_MIN\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">INT_MIN<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">int 型の最小値（負の値）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">int (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MAX\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">FLOAT_MAX<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">float 型の最大値（正の値）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MIN_ABS_NORMAL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">FLOAT_MIN_ABS_NORMAL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">正規化数の範囲内において、float 型で表現可能な、最も絶対値が小さい値（正の値、0 以外）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"FLOAT_MIN_ABS_DENORMAL\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">FLOAT_MIN_ABS_DENORMAL<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">非正規化数の範囲を含めて、float 型で表現可能な、最も絶対値が小さい値（正の値、0 以外）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"NAN\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">NAN<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">NaN の値を格納しています。NaN は、異常な浮動小数点演算を行った結果として生じる、特殊な値です。なお、NaN は NaN を含む全ての値と等しくないため、NaN かどうかを「 == 」演算子によって検査する事はできません。検査には「 <a href=\"#nan\">nan(value)<\/a> 」関数を使用してください。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"INF\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">INF<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">無限大の値（正の値）を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"nan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">nan(value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">値が NaN かどうかを検査します。NaN は、異常な浮動小数点演算を行った結果として生じる、特殊な値です。なお、NaN は NaN を含む全ての値と等しくないため、NaN かどうかを「 == 」演算子によって検査する事はできません。検査にはこの関数を使用してください。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">bool nan(float value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型) value: 検査対象の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(bool型) 引数 value が NaN の場合は true, NaN でなければ false。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( nan(0.0\/0.0) ); \/\/ true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"inf\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">inf(value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">値が正または負の無限大かどうかを検査します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">bool inf(float value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型) value: 検査対象の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(bool型) 引数 value が正または負の無限大の場合は true, そうでなければ false。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( inf(1.0\/0.0) ); \/\/ true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"length\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">length(array, dimIndex)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">配列 array の、dimIndex に指定された次元における要素数を返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int length(any array[]...[], int dimIndex)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(任意型、任意次元の配列) array: 要素数を調べたい配列。\n\t\t\t<br \/>\n\t\t\t(int型) dimIndex: 要素数を調べたい次元のインデックス（左端の次元が 0 番目）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(int型) 指定された配列の、指定された次元における要素数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int a[10][11][12];<br \/>println( length(a,0) ); \/\/ 10<br \/>println( length(a,1) ); \/\/ 11<br \/>println( length(a,2) ); \/\/ 12<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"arrayrank\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">arrayrank(array)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">配列 array の次元数を返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int arrayrank(any array[]...[])<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(任意型、任意次元の配列) array: 次元数を調べたい配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(int型) 指定された配列の次元数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int a[10][11][12];<br \/>print( arrayrank(a) ); \/\/ 3<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTerminalIOXnci1Plugin\">SystemTerminalIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTerminalIOXnci1Plugin)<\/span><\/h2>\n\n<p>\n端末との入出力機能を提供するプラグインです。\n<br \/>\nスクリプトエンジンの「 UI_MODE 」オプションが「 CUI 」に設定されている場合は、\n入出力処理は標準入出力に対して行われます。\nスクリプトエンジンの「 UI_MODE 」オプションが「 GUI 」に設定されている場合は、\n端末に似たウィンドウが起動し、それに対して入出力処理が行われます。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"print\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">print(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">値を空白（タブ）区切りで端末に出力します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void print(...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(任意型、任意次元、任意個数) 端末に出力したい値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( &quot;Hello&quot;, 123, 4.56, true ); \/\/ Hello 123 4.56 true<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"println\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">println(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">値を空白（タブ）区切りで端末に出力し、改行します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void println(...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(任意型、任意次元、任意個数) 端末に出力したい値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">println( &quot;Hello&quot;, 123, 4.56, true ); \/\/ Hello 123 4.56 true (改行)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemUserIOXnci1Plugin\">SystemUserIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemUserIOXnci1Plugin)<\/span><\/h2>\n\n<p>\nユーザーとの間の対話的な入出力機能を提供するプラグインです。\n<br \/>\nスクリプトエンジンの「 UI_MODE 」オプションが「 CUI 」に設定されている場合は、\n入出力処理は標準入出力に対して行われます。\nスクリプトエンジンの「 UI_MODE 」オプションが「 GUI 」に設定されている場合は、\n呼び出しごとにポップアップウィンドウなどが表示され、\nその上でユーザーによる操作が行われます。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"popup\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">popup(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">メッセージや値などを表示します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void popup(any message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(任意型) message: 表示したいメッセージや値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">popup( &quot;Hello&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"alert\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">alert(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">メッセージを表示します。popup 関数と比べて、ウィンドウタイトルや表示のされ方などが、警告や注意を促す用途に適したものになっています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void alert(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(string型) message: 表示したいメッセージ。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">alert( &quot;Oops&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"confirm\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">confirm(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">メッセージを表示し、承認するか却下するかの選択をユーザーに求めます。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">bool confirm(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(string型) message: 表示したいメッセージ。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(bool型) 承認された場合に true<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">bool isYes = confirm( &quot;OK?&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"input\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">input(message)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">メッセージを表示し、値の入力をユーザーに求めます。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string[] input(string message)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(string型) message: 表示したいメッセージ。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(string[]型) 入力された値（要素数は通常 1 であり、スカラ変数でも受け取れます）<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">string inputtedValue[] = input( &quot;Please input&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"input-string-any\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">input(message, defaultValue)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">メッセージを表示し、値の入力をユーザーに求めます。デフォルト値を指定可能です。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string[] input(string message, any defaultValue)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) message: 表示したいメッセージ。\n\t\t\t<br \/>\n\t\t\t(任意型) defaultValue: デフォルト値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(string[]型) 入力された値（要素数は通常 1 であり、スカラ変数でも受け取れます）<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">string inputtedValue[] = input( &quot;Please input&quot;, \"Default value\" );<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemFileIOXnci1Plugin\">SystemFileIOXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemFileIOXnci1Plugin)<\/span><\/h2>\n\n<p>\nファイル入出力機能を提供するプラグインです。\n<\/p>\n\n\n<h3>変数<\/h3>\n\n\n<table id=\"READ\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">READ<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">ファイルを「読み込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">WRITE<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">ファイルを「書き込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">APPEND<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">ファイルを「追記」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">READ_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値CSV読み込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値CSV」とは、各行に複数の数値がカンマ「,」区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がカンマ記号を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、行内容を「,」記号で区切って読み込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">WRITE_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値CSV書き込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値CSV」とは、各行に複数の数値がカンマ「,」区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がカンマ記号を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、複数の値を「,」記号で区切って書き込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND_CSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">APPEND_CSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値CSV追記」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値CSV」とは、各行に複数の数値がカンマ「,」区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がカンマ記号を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、複数の値を「,」記号で区切って書き込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">READ_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値TSV読み込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値TSV」とは、各行に複数の数値がタブ文字（横に広い空白）区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がタブ文字を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、行内容をタブ文字で区切って読み込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"WRITE_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">WRITE_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値TSV書き込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値TSV」とは、各行に複数の数値がタブ文字（横に広い空白）区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がタブ文字を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、複数の値をタブ文字で区切って書き込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"APPEND_TSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">APPEND_TSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「数値TSV追記」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「数値TSV」とは、各行に複数の数値がタブ文字（横に広い空白）区切りで記載された形式を指すものです。\n\t\t\t複雑なテキストの値は想定していないため、値がタブ文字を含む際のエスケープ処理や、値をダブルクォーテーションで囲ったり\/外したりなどの対処は行われません。\n\t\t\t単純に、複数の値をタブ文字で区切って書き込みます。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"READ_STSV\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">READ_STSV<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t<p style=\"margin-top: 0px;\">\n\t\t\tファイルを「スペース＆タブ区切り読み込み」モードで開く場合に、<a href=\"#open\">open<\/a> 関数の引数 mode に指定する値です。\n\t\t\t<\/p>\n\t\t\t<p style=\"margin-bottom: 0px;\">\n\t\t\tここでの「スペース＆タブ区切り」とは、各行に複数の数値が、空白領域で区切られて並ぶ形式を指すものです。\n\t\t\t特に、1つの空白領域に、複数のスペースやタブ文字が連続する場合があるのが特徴です。\n\t\t\tこれは、恐らくテキストエディターで中身を読む際の見やすさ（列を縦に揃えたい等）が意識された形式で、数値計算\/データ解析関連分野などでしばしば存在します。\n\t\t\t<\/p>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">string (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"open\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">open(fileName, mode)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\tファイルを、指定されたモードで開き、ファイルIDを割り振って返します。\n\t\t読み書きの際の文字コードは、デフォルトでは UTF-8 が用いられます。ただし「 FILE_IO_ENCODING 」オプションが設定されている場合には、設定値の文字コードが用いられます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int open(string fileName, string mode)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) fileName: 開くファイルの名前またはパス。\n\t\t\t<br \/>\n\t\t\t(string型) mode: どういった処理のために開くかを表すモードで、<a href=\"#READ\">READ<\/a> や <a href=\"#WRITE\">WRITE<\/a> などから選んで指定します。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) 開いたファイルに割り振られたID番号で、読み書きなどの処理を行う際に使用します。\n\t\t\t<br \/>\n\t\t\t※ OS側で割り当てられているファイルIDとは無関係で、単純にスクリプト内で開いた順番で「1、2、3、...」と割り振られる番号です（ただし <a href=\"#close\">close<\/a> 済みのIDは再利用されます）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int fileId = open(\"example.txt\", READ);<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"open3arg\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">open(fileName, mode, encoding)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">ファイルを、指定されたモードと文字コードで開き、ファイルIDを割り振って返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int open(string fileName, string mode, string encoding)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) fileName: 開くファイルの名前またはパス。\n\t\t\t<br \/>\n\t\t\t(string型) mode: どういった処理のために開くかを表すモードで、<a href=\"#READ\">READ<\/a> や <a href=\"#WRITE\">WRITE<\/a> などから選んで指定します。\n\t\t\t<br \/>\n\t\t\t(string型) encoding: ファイルの読み書きに使用する文字コード名（ \"UTF-8\" や \"Shift_JIS\" など ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) 開いたファイルに割り振られたID番号で、読み書きなどの処理を行う際に使用します。\n\t\t\t<br \/>\n\t\t\t※ OS側で割り当てられているファイルIDとは無関係で、単純にスクリプト内で開いた順番で「1、2、3、...」と割り振られる番号です（ただし <a href=\"#close\">close<\/a> 済みのIDは再利用されます）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int fileId = open(\"example.txt\", READ, \"Shift_JIS\");<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"close\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">close(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたファイルを閉じます。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void close(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tclose(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"flush\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">flush(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルへの書き込み処理において、一時的にバッファに控えられている内容を、全て書き込みます（フラッシュ）。\n\t\t\tなお、ファイルを <a href=\"#close\">close<\/a> で閉じる際には、自動でフラッシュされるため、毎回この関数で明示的に行う必要はありません。\n\t\t\tこの関数は、ファイルを開いたまま長時間保持しつつ、特定のタイミングでフラッシュしたい場面などで使用します。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void flush(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tflush(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"write\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">write(fileId, ...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたファイルに、指定された値を書き込みます。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void write(int fileId, ...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t\t<br \/>\n\t\t\t(その後に任意型、任意個数で) 書き込む値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\twrite(fileId, \"abc\", 123, 4.56, true);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"writeln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">writeln(fileId, ...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたファイルに、指定された値を書き込み、最後に改行します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void write(int fileId, ...)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t\t<br \/>\n\t\t\t(その後に任意型、任意個数で) 書き込む値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", WRITE);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\twriteln(fileId, \"abc\", 123, 4.56, true);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"read\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">read(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたファイルから、内容を全て読み込んで返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string[] read(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型配列) <a href=\"#READ\">READ<\/a>モードでは、全内容が要素数 1 の配列として返されます（この場合はスカラ変数にもそのまま代入できます）。\n\t\t\t<a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a> モードでは、各モードに応じた区切り文字や改行の位置によって、区切られた値が配列として返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring contentInFile = read(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"readln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">readln(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたファイルから、1 行分の内容を読み込んで返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string[] readln(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型配列) <a href=\"#READ\">READ<\/a>モードでは、行の内容が要素数 1 の配列として返されます（この場合はスカラ変数にもそのまま代入できます）。\n\t\t\t<a href=\"#READ_CSV\">READ_CSV<\/a> \/ <a href=\"#READ_TSV\">READ_TSV<\/a> \/ <a href=\"#READ_STSV\">READ_STSV<\/a> モードでは、各モードに応じた区切り文字によって、区切られた値が配列として返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring contentInLine = readln(fileId);\n\t\t\t<br \/>\n\t\t\t<br \/>\n\t\t\t（または）\n\t\t\t<br \/>\n\t\t\t<br \/>\n\t\t\tint fileId = open(\"example.txt\", READ_CSV);\n\t\t\t<br \/>\n\t\t\t...\n\t\t\t<br \/>\n\t\t\tstring valuesInLine[] = readln(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"countln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">countln(fileId)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルの行数をカウントします。\n\t\t\tなお、この関数は内部で、ファイルの全行を一旦全て読み込んだ後に、同じモードで再び開きます。\n\t\t\tそのため、この関数の使用は、ファイルを開いた直後に行ってください。\n\t\t\t中途半端に数行だけ読んだ状態で使用すると、その状態が初期化されてしまう上に、正しい行数もカウントされません。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int countln(int fileId)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) fileId: 対象ファイルのID（ <a href=\"#open\">open<\/a>関数でファイルを開いた際の戻り値 ）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(int型) ファイル内の行数。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tint fileId = open(\"example.txt\", READ);\n\t\t\t<br \/>\n\t\t\tint lineN = countln(fileId);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"save\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">save(filePath, value)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルを開いて、指定された値を書き込み、ファイルを閉じます。\n\t\t\t書き込みの際の文字コードは、デフォルトでは UTF-8 が用いられます。ただし「 FILE_IO_ENCODING 」オプションが設定されている場合には、設定値の文字コードが用いられます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void save(string filePath, any value)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) filePath: 書き込み対象ファイルの名前またはパス。\n\t\t\t<br \/>\n\t\t\t(任意型) value: 書き込む値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tsave(\"example.txt\", 123);\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"load\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">load(filePath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルを開いて、内容を全て読み込み、ファイルを閉じます。\n\t\t\t読み込みの際の文字コードは、デフォルトでは UTF-8 が用いられます。ただし「 FILE_IO_ENCODING 」オプションが設定されている場合には、設定値の文字コードが用いられます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string load(string filePath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) filePath: 読み込み対象ファイルの名前またはパス。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) 読み込まれた内容。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tstring content = read(\"example.txt\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exists\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">exists(filePath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルパスの位置に、実際にファイルやフォルダが存在するかどうかを判定します。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">bool exists(string filePath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) filePath: 存在を判定したいファイルやフォルダのパス。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(bool型) ファイルが存在する場合に true。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tbool result = exists(\".\/temp\/example.txt\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"isdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">isdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたファイルパスの位置にあるものが、フォルダかどうかを判定します。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">bool isdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) directoryPath: フォルダかどうかを判定したいファイルパス。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(bool型) フォルダである場合に true。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tbool result = isdir(\".\/temp\/example_folder\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"listdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">listdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたフォルダ内にある、全てのファイルやサブフォルダの名前を、リストアップして返します。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">string[] listdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) directoryPath: フォルダのパス。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型配列) 指定されたフォルダ内の、全てのファイルやサブフォルダの名前を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tstring elementNames[] = listdir(\".\/temp\/example_folder\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"mkdir\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">mkdir(directoryPath)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t指定されたパスの位置に、フォルダを作成します。ただし、あらかじめ親階層のフォルダが存在している必要があります。\n\t\t\tそのため、深い階層のフォルダを作成する場合には、親階層から子孫階層へと、順に作成していく必要があります。\n\t\t\tなお、作成対象のフォルダが既に存在している場合には、何も起こりません（エラーも発生しません）。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void mkdir(string directoryPath)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(string型) directoryPath: 作成対象のフォルダのパス。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tmkdir(\".\/temp\");\n\t\t\t<br \/>\n\t\t\tmkdir(\".\/temp\/example_folder\");\n\t\t\t<br \/>\n\t\t\tmkdir(\".\/temp\/example_folder\/example_folder2\");\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTimeXnci1Plugin\">SystemTimeXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTimeXnci1Plugin)<\/span><\/h2>\n\n<p>\n時間制御に関するユーティリティ機能を提供するプラグインです。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"time\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">time()<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">現在のスクリプトの実行開始時点からの経過時間を、ミリ秒単位で取得して返します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">int time()<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(int型) 現在のスクリプト実行開始時点からの、ミリ秒単位での経過時間。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int t = time();<br \/>print( t );<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sleep\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sleep(sleepTime)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">スクリプトの実行を、ミリ秒単位で指定された時間だけ停止します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void sleep( int sleepTime )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(int型) sleepTime: ミリ秒単位での停止時間。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">sleep(1000); \/\/ 1秒停止<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTerminationXnci1Plugin\">SystemTerminationXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTerminationXnci1Plugin)<\/span><\/h2>\n\n<p>\nスクリプトを終了させる機能を提供するプラグインです。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"exit\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">exit()<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">エラーを発生させずにスクリプトの実行を終了します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void exit()<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">exit();<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exit_int\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">exit(exitStatusCode)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">終了ステータスコードを指定して、エラーを発生させずにスクリプトの実行を終了します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void exit(int exitStatusCode)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(int型) exitStatusCode: 終了ステータスコード（扱いは処理系依存）<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">exit(1);<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"error\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">error(errorMessage)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">指定されたメッセージのエラーを発生させ、スクリプトの実行を終了します。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void error(string errorMessage)<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(string型) errorMessage: ユーザーに通知したいエラーメッセージ。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">error( &quot;something is wrong !&quot; );<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"SystemTestXnci1Plugin\">SystemTestXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.system.xnci1.SystemTestXnci1Plugin)<\/span><\/h2>\n\n<p>\nテストのためのユーティリティ機能を提供するプラグインです。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"assert\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">assert(expectedCondition)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">引数に指定した条件式の値が true であれば何もせず、false であればエラーを発生させます。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">void assert( bool expectedCondition )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(bool型) expectedCondition: 期待される条件式の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">なし<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">int x;<br \/>x = 1; assert( 0 < x ); \/\/ OK<br \/>x = -1; assert( 0 < x ) ; \/\/ Error<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n\n\n\n\n\n\n\n<\/body>\n<\/html>\n"
	},
	"page2": {
		"title": "Vnano Math Plug-in Group",
		"description": "Plug-ins in this package/subpackages provide elementary math & statistical functions available in scripts of the Vnano (VCSSL nano).",
		"text": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n\t<title>Vnano Math Plug-ins<\/title>\n\t<meta charset=\"UTF-8\">\n\t<style type=\"text\/css\">\n\t\th1 .spec-path { font-size: 70%; }\n\t\th2 .spec-path { font-size: 70%; }\n\t\t.spec-table { width: 100%; border: 1px solid #000000; border-collapse: collapse; margin-bottom: 20px; }\n\t\t.spec-table td { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table th { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table .lcol { width: 100px; background-color: #eeeeee; }\n\t\t.spec-table .rcol { }\n\t\t.spec-dl { }\n\t\t.spec-dl dt { font-weight: bold; display: list-item; list-style-position: outside; margin-left: 20px; list-style-type: disc; }\n\t\t.spec-dl dd { margin-bottom: 14px; line-height: 160%; }\n\t<\/style>\n<\/head>\n\n<body>\n\n\n\n<h1>Vnano Math Plug-in Group<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.math package)<span><\/h1>\n<hr \/>\n\n\n\n<h2>Abstract<\/h2>\n\n<p>\nPlug-ins in this package\/subpackages provide elementary math &amp; statistical functions available in scripts of the Vnano (VCSSL nano).\n<br \/>\nFeatures provided by these plug-ins is a subset (*) of the <a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/Math\">VCSSL Math Library<\/a> and \nthe <a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/math\/StatisticalFunction\">math.StatisticalFunction Library<\/a> which are a standard libraries of the VCSSL,\nso same features are also available in scripts of the VCSSL by default, with importing them at the head of the script as: \n&quot; import Math; import math.StatisticalFunction; &quot;\n<\/p>\n\n<p>\n* Features of some math functions (e.g.: sin) provided by plug-ins in this package are extended to make it possible to get\/return arrays. It has not been supported yet on the VCSSL, so it is only available on the Vnano.\n<\/p>\n\n\n<h2>List of Provided Plug-ins and Features<\/h2>\n\n<dl class=\"spec-dl\">\n\t<dt><a href=\"#MathElementaryXnci1Plugin\">MathElementaryXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides elementary math functions.\n\t\t\t<br \/>\n\t\t\tVariable: <a href=\"#PI\">PI<\/a>\n\t\t\t<br \/>\n\t\t\tFunction:\n\t\t\t\t<a href=\"#rad\">rad(degree)<\/a> \/ <a href=\"#deg\">deg(radian)<\/a> \/ <a href=\"#sin\">sin(x)<\/a> \/ <a href=\"#cos\">cos(x)<\/a> \/ <a href=\"#tan\">tan(x)<\/a> \/ \n\t\t\t\t<a href=\"#asin\">asin(x)<\/a> \/ <a href=\"#acos\">acos(x)<\/a> \/ <a href=\"#atan\">atan(x)<\/a> \/\n\t\t\t\t<a href=\"#sqrt\">sqrt(x)<\/a> \/ <a href=\"#ln\">ln(x)<\/a> \/ <a href=\"#log10\">log10(x)<\/a> \/ <a href=\"#pow\">pow(x,exponent)<\/a> \/ <a href=\"#exp\">exp(x)<\/a> \/\n\t\t\t\t<a href=\"#abs\">abs(x)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#MathStatisticalXnci1Plugin\">MathStatisticalXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\tProvides elementary statistical functions.\n\t\t\t<br \/>\n\t\t\tFunction:\n\t\t\t\t<a href=\"#sum\">sum(...)<\/a> \/ <a href=\"#sum_array\">sum(array)<\/a> \/ \n\t\t\t\t<a href=\"#mean\">mean(...)<\/a> \/ <a href=\"#mean_array\">mean(array)<\/a> \/ \n\t\t\t\t<a href=\"#van\">van(...)<\/a> \/ <a href=\"#van_array\">van(array)<\/a> \/ \n\t\t\t\t<a href=\"#van1\">van1(...)<\/a> \/ <a href=\"#van1_array\">van1(array)<\/a> \/ \n\t\t\t\t<a href=\"#sdn\">sdn(...)<\/a> \/ <a href=\"#sdn_array\">sdn(array)<\/a> \/ \n\t\t\t\t<a href=\"#sdn1\">sdn1(...)<\/a> \/ <a href=\"#sdn1_array\">sdn1(array)<\/a>\n\t\t<\/dd>\n<\/dl>\n\n\n\n<h2>License<\/h2>\n\n<p>\nAll of the above plug-ins are released under <a href=\"https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/deed\">CC0<\/a>.\n<\/p>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"MathElementaryXnci1Plugin\">MathElementaryXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.math.xnci1.MathElementaryXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing elementary math functions.\n<\/p>\n\n\n<h3>Variables<\/h3>\n\n<table id=\"PI\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Variable<\/th>\n\t\t<th class=\"rcol\">PI<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Value<\/td>\n\t\t<td class=\"rcol\">Storing the value of the circle ratio π.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Data Type<\/td>\n\t\t<td class=\"rcol\">float (constant)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"rad\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">rad( degree )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe conversion function from degree to radian. \n\t\t\tConverts the value in the unit of degree passed as an argument &quot;degree&quot; to the value in the unit of radian, and returns it.\n\t\t\tWhen an array is passed, converts each elements of it, stores them in another array, and returns it.\n\t\t\tPlease note that, the conversion result will not be shifted automatically to taking value in the range of [0, 2π), \n\t\t\tso you will get the result value exceeding 2π if you will pass the argument exceeding 360°.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] rad( const float &amp;degree[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) degree: The value in the unit of degree to be converted to the value in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return value<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The converted value in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( rad(180.0) ); \/\/ 3.14...<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"deg\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">deg( radian )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe conversion function from radian to degree. \n\t\t\tConverts the value in the unit of degree passed as an argument &quot;degree&quot; to the value in the unit of radian, and returns it.\n\t\t\tWhen an array is passed, converts each elements of it, stores them in another array, and returns it.\n\t\t\tPlease note that, the conversion result will not be shifted automatically to taking value in the range of [0, 360), \n\t\t\tso you will get the result value exceeding 360° if you will pass the argument exceeding 2π.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] deg( const float &amp;radian[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) radian: The value in the unit of radian to be converted to the value in the unit of degree.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The converted value in the unit of degree.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( deg(PI) ); \/\/ 180.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sin\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sin( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe sine function. The unit of the argument &quot;x&quot; is radian.\n\t\t\tWhen an array is passed, computes the value of sin(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Singature<\/td>\n\t\t<td class=\"rcol\">float[]...[] sin( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the sine function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the sine function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( sin(PI\/2.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"cos\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">cos( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe cosine function. The unit of the argument &quot;x&quot; is radian.\n\t\t\tWhen an array is passed, computes the value of cos(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Singature<\/td>\n\t\t<td class=\"rcol\">float[]...[] cos( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the cosine function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the cosine function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( cos(PI*2.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"tan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">tan( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe tangent function. The unit of the argument &quot;x&quot; is radian.\n\t\t\tWhen an array is passed, computes the value of tan(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] tan( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the tangent function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the tangent function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( tan(PI\/4.0) ); \/\/ 0.99999... (The true value is 1. The difference between the result and the true value is caused by tiny numerical error related with precisions of data\/algorithm\/etc., so it is not a bug.)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"asin\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">asin( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe inverse function of sine (arc-sine). The unit of the result is radian.\n\t\t\tWhen an array is passed, computes the value of asin(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] asin( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the arc-sine function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the arc-sine function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( asin(1.0) ); \/\/ 1.5707963... (≒π\/2)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"acos\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">acos( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe inverse function of cosine (arc-cosine). The unit of the result is radian.\n\t\t\tWhen an array is passed, computes the value of acos(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] acos( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the arc-cosine function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the arc-cosine function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( acos(-1.0) ); \/\/ 3.14... (≒π)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"atan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">atan( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe inverse function of cosine (arc-tangent). The unit of the result is radian.\n\t\t\tWhen an array is passed, computes the value of atan(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] atan( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the arc-tangent function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the arc-tangent function in the unit of radian.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( atan(1.0) ); \/\/ 0.78539... (≒π\/4)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sqrt\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sqrt( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe square-root function.\n\t\t\tWhen an array is passed, computes the value of sqrt(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] sqrt( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The value of which square root should be computed.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The square root value of the argument.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( sqrt(4.0) ); \/\/ 2.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"ln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">ln( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe logarithm function with the base &quot;e&quot; (napier number).\n\t\t\tWhen an array is passed, computes the value of ln(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] ln( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the logarithm function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the logarithm function with the base &quot;e&quot; (napier number).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( ln(10.0) ); \/\/ 2.3025...<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"log10\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">log10( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe logarithm function with the base 10.\n\t\t\tWhen an array is passed, computes the value of ln(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] log10( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">(float type, any rank) x: The argument of the logarithm function.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of the logarithm function with the base 10.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( log10(10.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"pow\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">pow( x, exponent )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe function which returns the value of &qupt;x&qupt; to &qupt;exponent&qupt;-power. \n\t\t\tWhen an array is passed, computes the value of pow(x[i], exponent) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] pow( const float &amp;x[]...[], const float &amp;exponent )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, any rank) x: see &quot;Feature&quot; section.\n\t\t\t<br \/>\n\t\t\t(float type) exponent: see &quot;Feature&quot; section.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param x) The value of &qupt;x&qupt; to &qupt;exponent&qupt;-power. <\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( pow(2.0,3.0) ); \/\/ 8.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exp\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">exp( exponent )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Fearure<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe function which returns the value of &qupt;e&qupt; (napier number) to &qupt;exponent&qupt;-power. \n\t\t\tWhen an array is passed, computes the value of exp(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] exp( const float &amp;exponent[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, any rank) exponent: see &quot;Feature&quot; section.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The value of &qupt;e&qupt; (napier number) to &qupt;exponent&qupt;-power. <\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( exp(2.0) ); \/\/ 7.38905... (≒ squared value of &quot;e&quot;)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"abs\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">abs( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tThe absolute-value function. \n\t\t\tWhen an array is passed, computes the value of abs(x[i]) for each elements x[i], stores them in another array, and returns it.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float[]...[] abs( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, any rank) x: The value of which absolute value should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type, having same rank\/length with the param) The absolute value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( abs(-1.23) ); \/\/ 1.23<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"MathStatisticalXnci1Plugin\">MathStatisticalXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.math.xnci1.MathStatisticalXnci1Plugin)<\/span><\/h2>\n\n<p>\nThe plug-in providing elementary statistical functions.\n<\/p>\n\n\n<h3>Functions<\/h3>\n\n\n<table id=\"sum\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sum(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the summation value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sum( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which summation value should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The summation value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( sum(1.0, 2.5, 4.0) ); \/\/ 7.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sum_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sum( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the summation value of the values stored in the specified array.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sum( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array) The array storing the values of which summation value should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The summation value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sum(array) ); \/\/ 7.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"mean\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">mean(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the arithmetic mean value.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float mean( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which arithmetic mean value should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The arithmetic mean value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( mean(1.0, 2.5, 4.0) ); \/\/ 2.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"mean_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">mean( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the arithmetic mean value of the values stored in the specified array.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float mean( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array) The array storing the values of which arithmetic mean value should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The arithmetic mean value.<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( mean(array) ); \/\/ 2.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">van(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Fearure<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the variance ( denominator : N ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float van( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which value of the variable should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the variance ( denominator : N ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( van(1.0, 2.5, 4.0) ); \/\/ 1.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">van( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Fearure<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the variance ( denominator : N ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float van( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array ) The array storing the values of which value of the variable should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the variance ( denominator : N ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( van(array) ); \/\/ 1.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van1\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">van1(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Fearure<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the variance ( denominator : N-1 ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float van( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which value of the variable should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the variance ( denominator : N-1 ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( van1(1.0, 2.5, 4.0) ); \/\/ 2.25<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van1_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">van1( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Fearure<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the variance ( denominator : N-1 ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float van1( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array ) The array storing the values of which value of the variable should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the variance ( denominator : N-1 ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( van1(array) ); \/\/ 2.25\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sdn(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the standard-deviation ( denominator : N ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sdn( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which value of the standard-deviation should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the standard-deviation ( denominator : N ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( sdn(1.0, 2.5, 4.0) ); \/\/ 1.2247... (≒√1.5)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sdn( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the standard-deviation ( denominator : N ), of the values stored in the specifed array.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sdn( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array) The array storing the values of which value of the standard-deviation should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the standard-deviation ( denominator : N ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sdn(array) ); \/\/ 1.2247... (≒√1.5)\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn1\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sdn1(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the standard-deviation ( denominator : N-1 ).\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sdn1( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, can pass any number of values) Values of which value of the standard-deviation should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the standard-deviation ( denominator : N-1 ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">print( sdn1(1.0, 2.5, 4.0) ); \/\/ 1.5 (=√2.25)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn1_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sdn1( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tComputes the value of the standard-deviation ( denominator : N-1 ), of the values stored in the specifed array.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Signature<\/td>\n\t\t<td class=\"rcol\">float sdn1( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Params<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float type, 1-D array) The array storing the values of which value of the standard-deviation should be computed.\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Return<\/td>\n\t\t<td class=\"rcol\">(float type) The value of the standard-deviation ( denominator : N-1 ).<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Example<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sdn1(array) ); \/\/ 1.5 (=√2.25)\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n\n\n\n\n\n<\/body>\n<\/html>\n"
	},
	"page3": {
		"title": "Vnano Math プラグイン群",
		"description": "このパッケージ/サブパッケージ内のプラグイン群は、Vnano (VCSSL nano) のスクリプトから利用できる、初等的な数学・統計関数などを提供します。",
		"text": "<!doctype html>\n<html lang=\"ja\">\n\n<head>\n\t<title>Vnano Math プラグイン群<\/title>\n\t<meta charset=\"UTF-8\">\n\t<style type=\"text\/css\">\n\t\th1 .spec-path { font-size: 70%; }\n\t\th2 .spec-path { font-size: 70%; }\n\t\t.spec-table { width: 100%; border: 1px solid #000000; border-collapse: collapse; margin-bottom: 20px; }\n\t\t.spec-table td { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table th { border: 1px solid #000000; text-align: left; }\n\t\t.spec-table .lcol { width: 100px; background-color: #eeeeee; }\n\t\t.spec-table .rcol { }\n\t\t.spec-dl { }\n\t\t.spec-dl dt { font-weight: bold; display: list-item; list-style-position: outside; margin-left: 20px; list-style-type: disc; }\n\t\t.spec-dl dd { margin-bottom: 14px; line-height: 160%; }\n\t<\/style>\n<\/head>\n\n<body>\n\n\n\n<h1>Vnano Math プラグイン群<br \/><span class=\"spec-path\">(org.vcssl.nano.plugin.math パッケージ)<\/span><\/h1>\n<hr \/>\n\n\n\n<h2>概要<\/h2>\n\n<p>\nこのパッケージ\/サブパッケージ内のプラグイン群は、Vnano (VCSSL nano) のスクリプトから利用できる、初等的な数学・統計関数などを提供します。\n<br \/>\nなお、このプラグイン群の提供機能は、VCSSL の標準ライブラリである <a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/Math\">VCSSL Math ライブラリ<\/a> および\n<a href=\"https:\/\/www.vcssl.org\/ja-jp\/lib\/math\/StatisticalFunction\">math.StatisticalFunction ライブラリ<\/a> の機能のサブセット（※）になっています。\nそのため、VCSSL のスクリプトにおいても、ほぼ同様の機能が標準で利用可能です。\nただし、その際は VCSSL スクリプトの先頭で「 import Math; import math.StatisticalFunction; 」と記述し、ライブラリを読み込む必要があります。\n<\/p>\n\n<p>\n※ このプラグイン群が提供するいくつかの数学関数（ sin 関数など ）は、スカラだけでなく配列に対して処理を行えるように拡張されています。\nこの機能は現状ではVnanoでのみ対応しており、VCSSLではまだサポートされていません。\n<\/p>\n\n<h2>提供プラグインおよび機能一覧<\/h2>\n\n<dl class=\"spec-dl\">\n\t<dt><a href=\"#MathElementaryXnci1Plugin\">MathElementaryXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\t初等的な数学関数などを提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t変数: <a href=\"#PI\">PI<\/a>\n\t\t\t<br \/>\n\t\t\t関数:\n\t\t\t\t<a href=\"#rad\">rad(degree)<\/a> \/ <a href=\"#deg\">deg(radian)<\/a> \/ <a href=\"#sin\">sin(x)<\/a> \/ <a href=\"#cos\">cos(x)<\/a> \/ <a href=\"#tan\">tan(x)<\/a> \/ \n\t\t\t\t<a href=\"#asin\">asin(x)<\/a> \/ <a href=\"#acos\">acos(x)<\/a> \/ <a href=\"#atan\">atan(x)<\/a> \/\n\t\t\t\t<a href=\"#sqrt\">sqrt(x)<\/a> \/ <a href=\"#ln\">ln(x)<\/a> \/ <a href=\"#log10\">log10(x)<\/a> \/ <a href=\"#pow\">pow(x,exponent)<\/a> \/ <a href=\"#exp\">exp(x)<\/a> \/\n\t\t\t\t<a href=\"#abs\">abs(x)<\/a>\n\t\t<\/dd>\n\t<dt><a href=\"#MathStatisticalXnci1Plugin\">MathStatisticalXnci1Plugin<\/a><\/dt>\n\t\t<dd>\n\t\t\t初等的な統計関数などを提供するプラグインです。\n\t\t\t<br \/>\n\t\t\t関数:\n\t\t\t\t<a href=\"#sum\">sum(...)<\/a> \/ <a href=\"#sum_array\">sum(array)<\/a> \/ \n\t\t\t\t<a href=\"#mean\">mean(...)<\/a> \/ <a href=\"#mean_array\">mean(array)<\/a> \/ \n\t\t\t\t<a href=\"#van\">van(...)<\/a> \/ <a href=\"#van_array\">van(array)<\/a> \/ \n\t\t\t\t<a href=\"#van1\">van1(...)<\/a> \/ <a href=\"#van1_array\">van1(array)<\/a> \/ \n\t\t\t\t<a href=\"#sdn\">sdn(...)<\/a> \/ <a href=\"#sdn_array\">sdn(array)<\/a> \/ \n\t\t\t\t<a href=\"#sdn1\">sdn1(...)<\/a> \/ <a href=\"#sdn1_array\">sdn1(array)<\/a>\n\t\t<\/dd>\n<\/dl>\n\n\n\n<h2>ライセンス<\/h2>\n\n<p>\n上記のプラグインは全て <a href=\"https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/deed.ja\">CC0<\/a> で公開されています。\n<\/p>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"MathElementaryXnci1Plugin\">MathElementaryXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.math.xnci1.MathElementaryXnci1Plugin)<\/span><\/h2>\n\n<p>\n初等的な数学関数などを提供するプラグインです。\n<\/p>\n\n\n<h3>変数<\/h3>\n\n<table id=\"PI\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">変数<\/th>\n\t\t<th class=\"rcol\">PI<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">値<\/td>\n\t\t<td class=\"rcol\">円周率の値を格納しています。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">データ型<\/td>\n\t\t<td class=\"rcol\">float (定数)<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"rad\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">rad( degree )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t度からラジアンへの変換関数です。引数 degree に指定した度の値が、ラジアンに変換されて返されます。引数に配列を指定した場合は、その各要素の値が変換されます。\n\t\t\tなお、変換結果の値の範囲は特に調整されないため、負の度の値に対しては負のラジアン値が求まり、360度を超える値に対しては 2π を超えるラジアン値が求まります。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] rad( const float &amp;degree[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) degree: ラジアンに変換したい度の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) ラジアンに変換された値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( rad(180.0) ); \/\/ 3.14...<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"deg\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">deg( radian )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tラジアンから度への変換関数です。引数 radian に指定したラジアンの値が、度に変換されて返されます。引数に配列を指定した場合は、その各要素の値が変換されます。\n\t\t\tなお、変換結果の値の範囲は特に調整されないため、負のラジアンに対しては負の度が求まり、2πを超えるラジアンに対しては 360 度を超える値が求まります。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] deg( const float &amp;radian[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) radian: 度に変換したい度の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 度に変換された値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( deg(PI) ); \/\/ 180.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sin\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sin( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t正弦（サイン）関数です。引数 x の単位はラジアンで指定します。引数 x に配列を指定した場合は、その各要素 x[i] に対する sin(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] sin( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: ラジアン単位での、正弦関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 正弦関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( sin(PI\/2.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"cos\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">cos( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t余弦（コサイン）関数です。引数 x の単位はラジアンで指定します。引数 x に配列を指定した場合は、その各要素 x[i] に対する cos(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] cos( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: ラジアン単位での、余弦関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 余弦関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( cos(PI*2.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"tan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">tan( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t正接（タンジェント）関数です。引数 x の単位はラジアンで指定します。引数 x に配列を指定した場合は、その各要素 x[i] に対する tan(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] tan( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: ラジアン単位での、正接関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 正接関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( tan(PI\/4.0) ); \/\/ 0.99999... (真の値は 1 ですが、結果との不一致は表現精度や計算精度に関する微小な数値誤差によるものであり、バグではありません)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"asin\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">asin( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t正弦関数の逆関数（アークサイン）です。結果 x の単位はラジアンです。引数 x に配列を指定した場合は、その各要素 x[i] に対する asin(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] asin( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 逆正弦関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) ラジアン単位での、逆正接関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( asin(1.0) ); \/\/ 1.5707963... (≒π\/2)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"acos\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">acos( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t余弦関数の逆関数（アークサイン）です。結果 x の単位はラジアンです。引数 x に配列を指定した場合は、その各要素 x[i] に対する acos(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] acos( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 逆余弦関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) ラジアン単位での、逆余弦関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( acos(-1.0) ); \/\/ 3.14... (≒π)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"atan\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">atan( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t正接関数の逆関数（アークタンジェント）です。結果 x の単位はラジアンです。引数 x に配列を指定した場合は、その各要素に対する atan(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] atan( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 逆正接関数の引数。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) ラジアン単位での、逆正接関数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( atan(1.0) ); \/\/ 0.78539... (≒π\/4)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sqrt\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sqrt( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t平方根を求める関数です。引数 x に配列を指定した場合は、その各要素 x[i] に対する sqrt(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] sqrt( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 平方根を求めたい値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 平方根の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( sqrt(4.0) ); \/\/ 2.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"ln\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">ln( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t自然数 e を底とする対数関数（自然対数）です。引数 x に配列を指定した場合は、その各要素 x[i] に対する ln(x[i]) の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] ln( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 自然対数を求めたい値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 自然対数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( ln(10.0) ); \/\/ 2.3025...<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"log10\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">log10( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t10 を底とする対数関数（常用対数）です。引数に配列を指定した場合は、その各要素に対する常用対数値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] log10( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">(float型、任意次元) x: 常用対数を求めたい値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 常用対数の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( log10(10.0) ); \/\/ 1.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"pow\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">pow( x, exponent )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tx の exponent 乗を求める関数です。引数 x に配列を指定した場合は、その各要素に対する exponent 乗の値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] pow( const float &amp;x[]...[], const float &amp;exponent )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意次元) x: 「機能」の項目参照。\n\t\t\t<br \/>\n\t\t\t(float型) exponent: 「機能」の項目参照。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) x の exponent 乗の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( pow(2.0,3.0) ); \/\/ 8.0<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"exp\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">exp( exponent )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t自然対数の低 e の exponent 乗を求める関数です。引数に配列を指定した場合は、その各要素を指数とした（～乗をとった）値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] exp( const float &amp;exponent[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意次元) exponent: 「機能」の項目参照。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 自然対数の低 e の exponent 乗の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( exp(2.0) ); \/\/ 7.38905... (≒ e の2乗)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"abs\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">abs( x )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t絶対値関数です。引数に配列を指定した場合は、その各要素の絶対値を格納する配列が返されます。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float[]...[] abs( const float &amp;x[]...[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意次元) x: 絶対値を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型、引数と同次元・同要素数) 絶対値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( abs(-1.23) ); \/\/ 1.23<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<!-- ==================================================================================================== -->\n\n<hr style=\"page-break-before: always\" \/>\n\n<h2 id=\"MathStatisticalXnci1Plugin\">MathStatisticalXnci1Plugin<br \/><span class=\"spec-path\">(org.vcssl.nano.math.xnci1.MathStatisticalXnci1Plugin)<\/span><\/h2>\n\n<p>\n初等的な統計関数などを提供するプラグインです。\n<\/p>\n\n\n<h3>関数<\/h3>\n\n\n<table id=\"sum\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sum(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t和を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float sum( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 和を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 和の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( sum(1.0, 2.5, 4.0) ); \/\/ 7.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sum_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sum( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t配列要素の和を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcosl\">float sum( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 和を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 和の値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sum(array) ); \/\/ 7.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"mean\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">mean(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t平均値（算術平均）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float mean( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 平均値を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 平均値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( mean(1.0, 2.5, 4.0) ); \/\/ 2.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n<table id=\"mean_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">mean( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t配列要素の平均値（算術平均）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float mean( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 平均値を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 平均値。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( mean(array) ); \/\/ 2.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">van(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t分散（ 分母： N ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float van( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 分散を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 分散の値（ 分母： n ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( van(1.0, 2.5, 4.0) ); \/\/ 1.5<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">van( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t配列要素の分散（ 分母： N ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float van( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 分散を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 分散の値（ 分母： n ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( van(array) ); \/\/ 1.5\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van1\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">van1(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t分散（ 分母： N-1 ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float van( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 分散を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 分散の値（ 分母： N-1 ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( van1(1.0, 2.5, 4.0) ); \/\/ 2.25<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"van1_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">van1( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t配列要素の分散（ 分母： N-1 ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float van1( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 分散を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 分散の値（ 分母： N-1 ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( van1(array) ); \/\/ 2.25\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sdn(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t標準偏差（ 分母： N ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float sdn( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 標準偏差を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 標準偏差の値（ 分母： N ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( sdn(1.0, 2.5, 4.0) ); \/\/ 1.2247... (≒√1.5)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sdn( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t標準偏差（ 分母： N ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float sdn( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 標準偏差を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 標準偏差の値（ 分母： N ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sdn(array) ); \/\/ 1.2247... (≒√1.5)\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn1\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">Function<\/th>\n\t\t<th class=\"rcol\">sdn1(...)<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">Feature<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t標準偏差（ 分母： N-1 ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float sdn1( ... float )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、任意個数) 標準偏差を求めたい値。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 標準偏差の値（ 分母： n-1 ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">print( sdn1(1.0, 2.5, 4.0) ); \/\/ 1.5 (=√2.25)<\/td>\n\t<\/tr>\n<\/table>\n\n\n<table id=\"sdn1_array\" class=\"spec-table\">\n\t<tr>\n\t\t<th class=\"lcol\">関数<\/th>\n\t\t<th class=\"rcol\">sdn1( array )<\/th>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">機能<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t標準偏差（ 分母： N-1 ）を求める関数です。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">宣言形式<\/td>\n\t\t<td class=\"rcol\">float sdn1( float array[] )<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">引数<\/td>\n\t\t<td class=\"rcol\">\n\t\t\t(float型、1次元配列) 標準偏差を求めたい値を格納する配列。\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">戻り値<\/td>\n\t\t<td class=\"rcol\">(float型) 標準偏差の値（ 分母： N-1 ）。<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"lcol\">使用例<\/td>\n\t\t<td class=\"rcol\">\n\t\t\tfloat array[3];\n\t\t\t<br \/>\n\t\t\tarray[0] = 1.0;\n\t\t\t<br \/>\n\t\t\tarray[1] = 2.5;\n\t\t\t<br \/>\n\t\t\tarray[2] = 4.0;\n\t\t\t<br \/>\n\t\t\tprint( sdn1(array) ); \/\/ 1.5 (=√2.25)\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n\n\n\n\n\n\n<\/body>\n<\/html>\n"
	}
}
