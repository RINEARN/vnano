#ASSEMBLY_LANGUAGE_IDENTIFIER	"Vector Register Intermediate Language (VRIL)";
#ASSEMBLY_LANGUAGE_VERSION	"0.0.1";
#SCRIPT_LANGUAGE_IDENTIFIER	"Vnano";
#SCRIPT_LANGUAGE_VERSION	"0.1.4";

#GLOBAL_FUNCTION	_time();
#GLOBAL_FUNCTION	_output(string);

#LOCAL_VARIABLE	_LOOP_N@0;
#LOCAL_VARIABLE	_INSTRUCTION_PER_LOOP@1;
#LOCAL_VARIABLE	_TOTAL_INSTRUCTIONS@2;
#LOCAL_VARIABLE	_beginTime@3;
#LOCAL_VARIABLE	_i@4;
#LOCAL_VARIABLE	_endTime@5;
#LOCAL_VARIABLE	_requiredTime@6;
#LOCAL_VARIABLE	_ips@7;

	ALLOC	int	_LOOP_N@0;
	ALLOC	int	R0;
	MUL	int	R0	~int:100	~int:1000;
	ALLOC	int	R1;
	MUL	int	R1	R0	~int:1000;
	MOV	int	_LOOP_N@0	R1;

	ALLOC	int	_INSTRUCTION_PER_LOOP@1;
	MOV	int	_INSTRUCTION_PER_LOOP@1	~int:100;

	ALLOC	int	_TOTAL_INSTRUCTIONS@2;
	ALLOC	int	R2;
	MUL	int	R2	_INSTRUCTION_PER_LOOP@1	_LOOP_N@0;
	MOV	int	_TOTAL_INSTRUCTIONS@2	R2;

	ALLOC	int	_beginTime@3;
	CALLX	int	R3	_time();
	MOV	int	_beginTime@3	R3;

	ALLOC	int	_i@4;
	MOV	int	_i@4	~int:0;
#LABEL	&LABEL0;
	ALLOC	bool	R4;
	LT	int	R4	_i@4	_LOOP_N@0;
	JMPN	bool	-	&LABEL2	R4;


	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;

	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;
	NOP void -;


#LABEL	&LABEL1;
	ADD	int	_i@4	_i@4	~int:1;
	JMP	bool	-	&LABEL0	~bool:true;
#LABEL	&LABEL2;

	ALLOC	int	_endTime@5;
	CALLX	int	R5	_time();
	MOV	int	_endTime@5	R5;

	ALLOC	double	_requiredTime@6;
	ALLOC	int	R6;
	SUB	int	R6	_endTime@5	_beginTime@3;
	ALLOC	float	R20;
	CAST	float:int	R20	R6;
	ALLOC	float	R7;
	DIV	float	R7	R20	~float:1000.0;
	ALLOC	double	R21;
	CAST	double:float	R21	R7;
	MOV	double	_requiredTime@6	R21;

	ALLOC	double	_ips@7;
	ALLOC	float	R22;
	CAST	float:int	R22	_TOTAL_INSTRUCTIONS@2;
	ALLOC	float	R23;
	CAST	float:double	R23	_requiredTime@6;
	ALLOC	float	R8;
	DIV	float	R8	R22	R23;
	ALLOC	double	R24;
	CAST	double:float	R24	R8;
	MOV	double	_ips@7	R24;

	ALLOC	float	R9;
	MUL	float	R9	~float:1000.0	~float:1000.0;
	ALLOC	float	R25;
	CAST	float:double	R25	_ips@7;
	ALLOC	float	R10;
	DIV	float	R10	R25	R9;
	ALLOC	string	R26;
	CAST	string:float	R26	R10;
	ALLOC	string	R11;
	ADD	string	R11	~string:"VM_DRIVE_SPEED = "	R26;
	ALLOC	string	R12;
	ADD	string	R12	R11	~string:" [MHz(IPS)]";
	CALLX	void	-	_output(string)	R12;

	ALLOC	string	R27;
	CAST	string:double	R27	_requiredTime@6;
	ALLOC	string	R14;
	ADD	string	R14	~string:"REQUIRED_TIME = "	R27;
	ALLOC	string	R15;
	ADD	string	R15	R14	~string:" [SEC]";
	CALLX	void	-	_output(string)	R15;

	ALLOC	string	R28;
	CAST	string:int	R28	_TOTAL_INSTRUCTIONS@2;
	ALLOC	string	R17;
	ADD	string	R17	~string:"TOTAL_INSTRUCTIONS = "	R28;
	ALLOC	string	R18;
	ADD	string	R18	R17	~string:" [NOP]";
	CALLX	void	-	_output(string)	R18;
	END	void	-;
